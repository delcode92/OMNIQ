Metadata-Version: 2.4
Name: omniq
Version: 0.1.0
Summary: A Python wrapper module for OpenAI that redirects to your gateway
Author-email: Your Name <your.email@example.com>
License: MIT
Project-URL: Homepage, https://github.com/yourusername/omniq
Project-URL: Repository, https://github.com/yourusername/omniq
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: requests>=2.25.0
Dynamic: license-file

# OmniQ

A Python wrapper module for OpenAI that redirects to your gateway.

## Installation

You can install the package from PyPI:

```bash
pip install omniq
```

Or install directly from the wheel file:

```bash
pip install dist/omniq-0.1.0-py3-none-any.whl
```

## Usage

```python
from omniq import OmniQClient

# Initialize the client
client = OmniQClient(api_key="your-api-key")

# Create a chat completion
response = client.chat_completions_create(
    model="gpt-4o-mini",
    messages=[
        {"role": "system", "content": "You are a helpful assistant."},
        {"role": "user", "content": "Hello!"}
    ]
)

print(response)

# Create a streaming chat completion
response = client.chat_completions_create(
    model="gpt-4o-mini",
    messages=[
        {"role": "user", "content": "Count from 1 to 10."}
    ],
    stream=True
)

for chunk in response:
    print(chunk)
```

## Configuration

You can configure the client in several ways:

1. Pass parameters directly to the client:
   ```python
   client = OmniQClient(api_key="your-api-key", base_url="http://127.0.0.1:3000")
   ```

2. Set environment variables:
   ```bash
   export OPENAI_API_KEY="your-api-key"
   export OMNIQ_BASE_URL="http://127.0.0.1:3000"
   ```

## Development

To run tests:

```bash
# Run unit tests
python omniq/test_omniq.py

# Run functional tests (requires Rust Axum endpoint running)
python functional_test_omniq.py
```

To build the package from source:

```bash
python -m build
```

This will create both wheel and source distributions in the `dist/` directory.

## License

This project is licensed under the MIT License - see the LICENSE file for details.
