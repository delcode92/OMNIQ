#!/usr/bin/env python3
"""
Unit test script for omniq package.
This test verifies the package structure and basic functionality without making actual API calls.
"""
import sys
import os

# Add the parent directory to the path so we can import omniq
sys.path.insert(0, os.path.join(os.path.dirname(__file__), '..'))

def test_imports():
    """Test that all modules can be imported"""
    try:
        import omniq
        from omniq import OmniQClient
        from omniq.client import OmniQClient as OmniQClientDirect
        from omniq.config import Config
        from omniq.exceptions import OmniQError, OmniQAPIError, OmniQConfigError
        from omniq.http_client import HttpClient
        from omniq.utils import sanitize_params, format_response
        print("✓ All modules imported successfully")
        return True
    except Exception as e:
        print(f"✗ Failed to import modules: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_client_creation():
    """Test that client can be created"""
    try:
        from omniq import OmniQClient
        client = OmniQClient(api_key="test-key")
        print("✓ Client can be created")
        return True
    except Exception as e:
        print(f"✗ Failed to create client: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_client_attributes():
    """Test that client has expected attributes"""
    try:
        from omniq import OmniQClient
        client = OmniQClient(api_key="test-key")
        assert hasattr(client, 'config')
        assert hasattr(client, 'http_client')
        assert hasattr(client, 'completions_create')
        assert hasattr(client, 'chat_completions_create')
        print("✓ Client has expected attributes")
        return True
    except Exception as e:
        print(f"✗ Client missing expected attributes: {e}")
        import traceback
        traceback.print_exc()
        return False

def main():
    """Run all unit tests"""
    print("Running unit tests for OmniQ package...")
    print()
    
    tests = [
        test_imports,
        test_client_creation,
        test_client_attributes
    ]
    
    results = []
    for test in tests:
        result = test()
        results.append(result)
    
    print()
    print("=" * 50)
    print("Unit Test Summary")
    print("=" * 50)
    
    passed = sum(results)
    total = len(results)
    
    print(f"Passed: {passed}/{total}")
    
    if passed == total:
        print("All unit tests passed!")
        return 0
    else:
        print("Some unit tests failed!")
        return 1

if __name__ == "__main__":
    sys.exit(main())